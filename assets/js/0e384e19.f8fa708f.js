"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9671],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=i,d=u["".concat(s,".").concat(m)]||u[m]||h[m]||n;return a?r.createElement(d,l(l({ref:t},c),{},{components:a})):r.createElement(d,l({ref:t},c))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,l=new Array(n);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<n;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9881:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return h}});var r=a(7462),i=a(3366),n=(a(7294),a(3905)),l=["components"],o={sidebar_position:1},s="Classes",p={unversionedId:"intro",id:"intro",title:"Classes",description:"- AboutDialog - The GtkAboutDialog offers a simple way to display information about a program like its logo, name, copyright, website and license.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/gtk3vala/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Tutorial - Basics",permalink:"/gtk3vala/docs/category/tutorial---basics"}},c={},h=[],u={toc:h};function m(e){var t=e.components,a=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"classes"},"Classes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"AboutDialog"},"AboutDialog")," - The GtkAboutDialog offers a simple way to display information about a program like its logo, name, copyright, website and license."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"AccelGroup"},"AccelGroup")," - A AccelGroup represents a group of keyboard accelerators, typically attached to a toplevel Window (with add_accel_group)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"AccelLabel"},"AccelLabel")," - The AccelLabel widget is a subclass of Label that also displays an accelerator key on the right of the label text, e."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"AccelMap"},"AccelMap")," - Accelerator maps are used to define runtime configurable accelerators."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Accessible"},"Accessible")," - The Accessible class is the base class for accessible implementations for Widget subclasses."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Action"},"Action")," - In GTK+ 3.10, GtkAction has been deprecated. Use Action instead, and associate actions with Actionable widgets. Use MenuModel for creating menus with Menu.from_model."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ActionBar"},"ActionBar")," - GtkActionBar is designed to present contextual actions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ActionGroup"},"ActionGroup")," - Actions are organised into groups."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Adjustment"},"Adjustment")," - The Adjustment object represents a value which has an associated lower and upper bound, together with step and page increments, and a page size."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Alignment"},"Alignment")," - The Alignment widget controls the alignment and size of its child widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"AppChooserButton"},"AppChooserButton")," - The AppChooserButton is a widget that lets the user select an application."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"AppChooserDialog"},"AppChooserDialog")," - AppChooserDialog shows a AppChooserWidget inside a Dialog."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"AppChooserWidget"},"AppChooserWidget")," - AppChooserWidget is a widget for selecting applications."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Application"},"Application")," - Application is a class that handles many important aspects of a GTK+ application in a convenient fashion, without enforcing a one-size-fits-all application model."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ApplicationWindow"},"ApplicationWindow")," - ApplicationWindow is a Window subclass that offers some extra functionality for better integration with Application features."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Arrow"},"Arrow")," - GtkArrow should be used to draw simple arrows that need to point in one of the four cardinal directions (up, down, left, or right)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ArrowAccessible"},"ArrowAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"AspectFrame"},"AspectFrame")," - The AspectFrame is useful when you want pack a widget so that it can resize but always retains the same aspect ratio."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Assistant"},"Assistant")," - A Assistant is a widget used to represent a generally complex operation splitted in several steps, guiding the user through its pages and controlling the page flow to collect the necessary data."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Bin"},"Bin")," - The Bin widget is a container with just one child."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"BindingEntry"},"BindingEntry")," - Each key binding element of a binding sets binding list is represented by a GtkBindingEntry."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"BindingSet"},"BindingSet")," - A binding set maintains a list of activatable key bindings."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"BindingSignal"},"BindingSignal")," - A GtkBindingSignal stores the necessary information to activate a widget in response to a key press via a signal emission."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"BooleanCellAccessible"},"BooleanCellAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Box"},"Box")," - The GtkBox widget arranges child widgets into a single row or column, depending upon the value of its orientation property."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Builder"},"Builder")," - A GtkBuilder is an auxiliary object that reads textual descriptions of a user interface and instantiates the described objects."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Button"},"Button")," - The Button widget is generally used to trigger a callback function that is called when the button is pressed."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ButtonAccessible"},"ButtonAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ButtonBox"},"ButtonBox")," -"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Calendar"},"Calendar")," - Calendar is a widget that displays a Gregorian calendar, one month at a time."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellAccessible"},"CellAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellArea"},"CellArea"),' - The CellArea is an abstract class for CellLayout widgets (also referred to as "layouting widgets") to interface with an arbitrary number of CellRenderer s and interact with the user for a given TreeModel row.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellAreaBox"},"CellAreaBox")," - The CellAreaBox renders cell renderers into a row or a column depending on its Orientation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellAreaContext"},"CellAreaContext")," - The CellAreaContext object is created by a given CellArea implementation via its create_context virtual method and is used to store cell sizes and alignments for a series of TreeModel rows that are requested and rendered in the same context."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRenderer"},"CellRenderer")," - The CellRenderer is a base class of a set of objects used for rendering a cell to a Context."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRendererAccel"},"CellRendererAccel")," - CellRendererAccel displays a keyboard accelerator (i."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRendererCombo"},"CellRendererCombo")," - CellRendererCombo renders text in a cell like CellRendererText from which it is derived."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRendererPixbuf"},"CellRendererPixbuf")," - A CellRendererPixbuf can be used to render an image in a cell."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRendererProgress"},"CellRendererProgress")," - CellRendererProgress renders a numeric value as a progress par in a cell."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRendererSpin"},"CellRendererSpin")," - CellRendererSpin renders text in a cell like CellRendererText from which it is derived."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRendererSpinner"},"CellRendererSpinner")," - GtkCellRendererSpinner renders a spinning animation in a cell, very similar to Spinner."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRendererText"},"CellRendererText")," - A CellRendererText renders a given text in its cell, using the font, color and style information provided by its properties."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellRendererToggle"},"CellRendererToggle")," - CellRendererToggle renders a toggle button in a cell."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CellView"},"CellView")," - A CellView displays a single row of a TreeModel using a CellArea and CellAreaContext ."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CheckButton"},"CheckButton")," - A CheckButton places a discrete ToggleButton next to a widget, (usually a Label)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CheckMenuItem"},"CheckMenuItem")," - A CheckMenuItem is a menu item that maintains the state of a boolean value in addition to a MenuItem usual role in activating application code."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CheckMenuItemAccessible"},"CheckMenuItemAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Clipboard"},"Clipboard")," - The Clipboard object represents a clipboard of data shared between different processes or between different widgets in the same process."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ColorButton"},"ColorButton")," - The ColorButton is a button which displays the currently selected color and allows to open a color selection dialog to change the color."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ColorChooserDialog"},"ColorChooserDialog")," - The ColorChooserDialog widget is a dialog for choosing a color."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ColorChooserWidget"},"ColorChooserWidget")," - The ColorChooserWidget widget lets the user select a color."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ColorSelection"},"ColorSelection")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ColorSelectionDialog"},"ColorSelectionDialog")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ComboBox"},"ComboBox")," - A GtkComboBox is a widget that allows the user to choose from a list of valid choices."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ComboBoxAccessible"},"ComboBoxAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ComboBoxText"},"ComboBoxText")," - A GtkComboBoxText is a simple variant of ComboBox that hides the model-view complexity for simple text-only use cases."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Container"},"Container")," - A GTK+ user interface is constructed by nesting widgets inside widgets."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ContainerAccessible"},"ContainerAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ContainerCellAccessible"},"ContainerCellAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CssProvider"},"CssProvider")," - GtkCssProvider is an object implementing the StyleProvider interface."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"CssSection"},"CssSection")," - Defines a part of a CSS document."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Dialog"},"Dialog")," - Dialog boxes are a convenient way to prompt the user for a small amount of input, e."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"DrawingArea"},"DrawingArea")," - The DrawingArea widget is used for creating custom user interface elements."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Entry"},"Entry")," - The Entry widget is a single line text entry widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EntryAccessible"},"EntryAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EntryBuffer"},"EntryBuffer")," - The EntryBuffer class contains the actual text displayed in a Entry widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EntryCompletion"},"EntryCompletion")," - EntryCompletion is an auxiliary object to be used in conjunction with Entry to provide the completion functionality."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EntryIconAccessible"},"EntryIconAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EventBox"},"EventBox")," - The EventBox widget is a subclass of Bin which also has its own window."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EventController"},"EventController")," - EventController is a base, low-level implementation for event controllers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EventControllerKey"},"EventControllerKey")," - EventControllerKey is an event controller meant for situations where you need access to key events."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EventControllerMotion"},"EventControllerMotion")," - EventControllerMotion is an event controller meant for situations where you need to track the position of the pointer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"EventControllerScroll"},"EventControllerScroll")," - EventControllerScroll is an event controller meant to handle scroll events from mice and touchpads."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Expander"},"Expander")," - A Expander allows the user to hide or show its child by clicking on an expander triangle similar to the triangles used in a TreeView."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ExpanderAccessible"},"ExpanderAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FileChooserButton"},"FileChooserButton")," - The FileChooserButton is a widget that lets the user select a file."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FileChooserDialog"},"FileChooserDialog")," - FileChooserDialog is a dialog box suitable for use with \u201cFile/Open\u201d or \u201cFile/Save as\u201d commands."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FileChooserNative"},"FileChooserNative")," - FileChooserNative is an abstraction of a dialog box suitable for use with \u201cFile/Open\u201d or \u201cFile/Save as\u201d commands."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FileChooserWidget"},"FileChooserWidget")," - FileChooserWidget is a widget for choosing files."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FileChooserWidgetAccessible"},"FileChooserWidgetAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FileFilter"},"FileFilter")," - A GtkFileFilter can be used to restrict the files being shown in a FileChooser."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FileFilterInfo"},"FileFilterInfo")," - A FileFilterInfo-struct is used to pass information about the tested file to filter."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Fixed"},"Fixed")," - The Fixed widget is a container which can place child widgets at fixed positions and with fixed sizes, given in pixels."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FixedChild"},"FixedChild")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FlowBox"},"FlowBox")," - A GtkFlowBox positions child widgets in sequence according to its orientation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FlowBoxAccessible"},"FlowBoxAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FlowBoxChild"},"FlowBoxChild")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FlowBoxChildAccessible"},"FlowBoxChildAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FontButton"},"FontButton")," - The FontButton is a button which displays the currently selected font an allows to open a font chooser dialog to change the font."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FontChooserDialog"},"FontChooserDialog")," - The FontChooserDialog widget is a dialog for selecting a font."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FontChooserWidget"},"FontChooserWidget")," - The FontChooserWidget widget lists the available fonts, styles and sizes, allowing the user to select a font."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FontSelection"},"FontSelection")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FontSelectionDialog"},"FontSelectionDialog")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Frame"},"Frame")," - The frame widget is a bin that surrounds its child with a decorative frame and an optional label."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"FrameAccessible"},"FrameAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GLArea"},"GLArea")," - GLArea is a widget that allows drawing with OpenGL."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Gesture"},"Gesture")," - Gesture is the base object for gesture recognition, although this object is quite generalized to serve as a base for multi-touch gestures, it is suitable to implement single-touch and pointer-based gestures (using the special null EventSequence value for these)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GestureDrag"},"GestureDrag")," - GestureDrag is a Gesture implementation that recognizes drag operations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GestureLongPress"},"GestureLongPress")," - GestureLongPress is a Gesture implementation able to recognize long presses, triggering the pressed after the timeout is exceeded."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GestureMultiPress"},"GestureMultiPress")," - GestureMultiPress is a Gesture implementation able to recognize multiple clicks on a nearby zone, which can be listened for through the pressed signal."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GesturePan"},"GesturePan")," - GesturePan is a Gesture implementation able to recognize pan gestures, those are drags that are locked to happen along one axis."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GestureRotate"},"GestureRotate")," - GestureRotate is a Gesture implementation able to recognize 2-finger rotations, whenever the angle between both handled sequences changes, the angle_changed signal is emitted."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GestureSingle"},"GestureSingle")," - GestureSingle is a subclass of Gesture, optimized (although not restricted) for dealing with mouse and single-touch gestures."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GestureStylus"},"GestureStylus")," - GestureStylus is a Gesture implementation specific to stylus input."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GestureSwipe"},"GestureSwipe")," - GestureSwipe is a Gesture implementation able to recognize swipes, after a press/move/.../move/release sequence happens, the swipe signal will be emitted, providing the velocity and directionality of the sequence at the time it was lifted."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"GestureZoom"},"GestureZoom")," - GestureZoom is a Gesture implementation able to recognize pinch/zoom gestures, whenever the distance between both tracked sequences changes, the scale_changed signal is emitted to report the scale factor."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Gradient"},"Gradient")," - GtkGradient is a boxed type that represents a gradient."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Grid"},"Grid")," - GtkGrid is a container which arranges its child widgets in rows and columns, with arbitrary positions and horizontal/vertical spans."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HBox"},"HBox")," - HBox is a container that organizes child widgets into a single row."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HButtonBox"},"HButtonBox")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HPaned"},"HPaned")," - The HPaned widget is a container widget with two children arranged horizontally."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HSV"},"HSV")," - HSV is the \u201ccolor wheel\u201d part of a complete color selector widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HScale"},"HScale")," - The HScale widget is used to allow the user to select a value using a horizontal slider."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HScrollbar"},"HScrollbar")," - The HScrollbar widget is a widget arranged horizontally creating a scrollbar."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HSeparator"},"HSeparator")," - The HSeparator widget is a horizontal separator, used to group the widgets within a window."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HandleBox"},"HandleBox"),' - The HandleBox widget allows a portion of a window to be "torn off".'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HeaderBar"},"HeaderBar")," - GtkHeaderBar is similar to a horizontal Box."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"HeaderBarAccessible"},"HeaderBarAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IMContext"},"IMContext")," - IMContext defines the interface for GTK+ input methods."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IMContextSimple"},"IMContextSimple")," - GtkIMContextSimple is a simple input method context supporting table-based input methods."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IMMulticontext"},"IMMulticontext")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IconFactory"},"IconFactory")," - An icon factory manages a collection of IconSet; a IconSet manages a set of variants of a particular icon (i."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IconInfo"},"IconInfo")," - Contains information found when looking up an icon in an icon theme."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IconSet"},"IconSet")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IconSource"},"IconSource")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IconTheme"},"IconTheme")," - IconTheme provides a facility for looking up icons by name and size."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IconView"},"IconView")," - IconView provides an alternative view on a TreeModel."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"IconViewAccessible"},"IconViewAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Image"},"Image")," - The Image widget displays an image."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ImageAccessible"},"ImageAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ImageCellAccessible"},"ImageCellAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ImageMenuItem"},"ImageMenuItem")," - A GtkImageMenuItem is a menu item which has an icon next to the text label."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"InfoBar"},"InfoBar")," - InfoBar is a widget that can be used to show messages to the user without showing a dialog."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Invisible"},"Invisible")," - The Invisible widget is used internally in GTK+, and is probably not very useful for application developers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Label"},"Label")," - The Label widget displays a small amount of text."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"LabelAccessible"},"LabelAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"LabelSelectionInfo"},"LabelSelectionInfo")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Layout"},"Layout")," - Layout is similar to DrawingArea in that it\u2019s a \u201cblank slate\u201d and doesn\u2019t do anything except paint a blank background by default."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"LevelBar"},"LevelBar")," - The LevelBar is a bar widget that can be used as a level indicator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"LevelBarAccessible"},"LevelBarAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"LinkButton"},"LinkButton")," - A GtkLinkButton is a Button with a hyperlink, similar to the one used by web browsers, which triggers an action when clicked."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"LinkButtonAccessible"},"LinkButtonAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ListBox"},"ListBox")," - A GtkListBox is a vertical container that contains GtkListBoxRow children."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ListBoxAccessible"},"ListBoxAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ListBoxRow"},"ListBoxRow")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ListBoxRowAccessible"},"ListBoxRowAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ListStore"},"ListStore")," - The ListStore object is a list model for use with a TreeView widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"LockButton"},"LockButton")," - GtkLockButton is a widget that can be used in control panels or preference dialogs to allow users to obtain and revoke authorizations needed to operate the controls."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"LockButtonAccessible"},"LockButtonAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Menu"},"Menu")," - A Menu is a MenuShell that implements a drop down menu consisting of a list of MenuItem objects which can be navigated and activated by the user to perform application functions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuAccessible"},"MenuAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuBar"},"MenuBar")," - The MenuBar is a subclass of MenuShell which contains one or more MenuItems."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuButton"},"MenuButton")," - The MenuButton widget is used to display a popup when clicked on."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuButtonAccessible"},"MenuButtonAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuItem"},"MenuItem")," - The MenuItem widget and the derived widgets are the only valid children for menus."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuItemAccessible"},"MenuItemAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuShell"},"MenuShell")," - A MenuShell is the abstract base class used to derive the Menu and MenuBar subclasses."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuShellAccessible"},"MenuShellAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MenuToolButton"},"MenuToolButton")," - A MenuToolButton is a ToolItem that contains a button and a small additional button with an arrow."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MessageDialog"},"MessageDialog")," - MessageDialog presents a dialog with some message text."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Misc"},"Misc")," - The Misc widget is an abstract widget which is not useful itself, but is used to derive subclasses which have alignment and padding attributes."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ModelButton"},"ModelButton")," - GtkModelButton is a button class that can use a Action as its model."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"MountOperation"},"MountOperation")," - This should not be accessed directly."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"NativeDialog"},"NativeDialog")," - Native dialogs are platform dialogs that don't use Dialog or Window."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Notebook"},"Notebook")," - The Notebook widget is a Container whose children are pages that can be switched between using tab labels along one edge."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"NotebookAccessible"},"NotebookAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"NotebookPageAccessible"},"NotebookPageAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"NumerableIcon"},"NumerableIcon")," - GtkNumerableIcon is a subclass of EmblemedIcon that can show a number or short string as an emblem."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"OffscreenWindow"},"OffscreenWindow")," - GtkOffscreenWindow is strictly intended to be used for obtaining snapshots of widgets that are not part of a normal widget hierarchy."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Overlay"},"Overlay")," - GtkOverlay is a container which contains a single main child, on top of which it can place \u201coverlay\u201d widgets."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PadController"},"PadController")," - PadController is an event controller for the pads found in drawing tablets (The collection of buttons and tactile sensors often found around the stylus-sensitive area)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PageSetup"},"PageSetup")," - A GtkPageSetup object stores the page size, orientation and margins."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Paned"},"Paned")," - Paned has two panes, arranged either horizontally or vertically."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PanedAccessible"},"PanedAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PaperSize"},"PaperSize")," - GtkPaperSize handles paper sizes."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PlacesSidebar"},"PlacesSidebar")," - PlacesSidebar is a widget that displays a list of frequently-used places in the file system: the user\u2019s home directory, the user\u2019s bookmarks, and volumes and drives."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Plug"},"Plug")," - Together with Socket, Plug provides the ability to embed widgets from one process into another process in a fashion that is transparent to the user."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PlugAccessible"},"PlugAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Popover"},"Popover")," - GtkPopover is a bubble-like context window, primarily meant to provide context-dependent information or options."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PopoverAccessible"},"PopoverAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PopoverMenu"},"PopoverMenu")," - GtkPopoverMenu is a subclass of Popover that treats its children like menus and allows switching between them."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PrintContext"},"PrintContext")," - A GtkPrintContext encapsulates context information that is required when drawing pages for printing, such as the cairo context and important parameters like page size and resolution."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PrintOperation"},"PrintOperation")," - GtkPrintOperation is the high-level, portable printing API."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"PrintSettings"},"PrintSettings")," - A GtkPrintSettings object represents the settings of a print dialog in a system-independent way."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ProgressBar"},"ProgressBar")," - The ProgressBar is typically used to display the progress of a long running operation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ProgressBarAccessible"},"ProgressBarAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RadioAction"},"RadioAction")," - A RadioAction is similar to RadioMenuItem."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RadioButton"},"RadioButton")," - A single radio button performs the same basic function as a CheckButton, as its position in the object hierarchy reflects."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RadioButtonAccessible"},"RadioButtonAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RadioMenuItem"},"RadioMenuItem")," - A radio menu item is a check menu item that belongs to a group."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RadioMenuItemAccessible"},"RadioMenuItemAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RadioToolButton"},"RadioToolButton")," - A RadioToolButton is a ToolItem that contains a radio button, that is, a button that is part of a group of toggle buttons where only one button can be active at a time."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Range"},"Range")," - Range is the common base class for widgets which visualize an adjustment, e."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RangeAccessible"},"RangeAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RcContext"},"RcContext")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RcStyle"},"RcStyle")," - The RcStyle-struct is used to represent a set of information about the appearance of a widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RecentAction"},"RecentAction")," - A RecentAction represents a list of recently used files, which can be shown by widgets such as RecentChooserDialog or RecentChooserMenu."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RecentChooserDialog"},"RecentChooserDialog")," - RecentChooserDialog is a dialog box suitable for displaying the recently used documents."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RecentChooserMenu"},"RecentChooserMenu")," - RecentChooserMenu is a widget suitable for displaying recently used files inside a menu."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RecentChooserWidget"},"RecentChooserWidget")," - RecentChooserWidget is a widget suitable for selecting recently used files."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RecentFilter"},"RecentFilter")," - A RecentFilter can be used to restrict the files being shown in a RecentChooser."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RecentInfo"},"RecentInfo")," - RecentInfo -struct contains private data only, and should be accessed using the provided API."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RecentManager"},"RecentManager")," - RecentManager provides a facility for adding, removing and looking up recently used files."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"RendererCellAccessible"},"RendererCellAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Revealer"},"Revealer")," - The GtkRevealer widget is a container which animates the transition of its child from invisible to visible."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Scale"},"Scale")," - A GtkScale is a slider control used to select a numeric value."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ScaleAccessible"},"ScaleAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ScaleButton"},"ScaleButton")," - ScaleButton provides a button which pops up a scale widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ScaleButtonAccessible"},"ScaleButtonAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Scrollbar"},"Scrollbar")," - The Scrollbar widget is a horizontal or vertical scrollbar, depending on the value of the orientation property."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ScrolledWindow"},"ScrolledWindow")," - GtkScrolledWindow is a container that accepts a single child widget, makes that child scrollable using either internally added scrollbars or externally associated adjustments, and optionally draws a frame around the child."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ScrolledWindowAccessible"},"ScrolledWindowAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SearchBar"},"SearchBar")," - SearchBar is a container made to have a search entry (possibly with additional connex widgets, such as drop-down menus, or buttons) built-in."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SearchEntry"},"SearchEntry")," - SearchEntry is a subclass of Entry that has been tailored for use as a search entry."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SelectionData"},"SelectionData")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Separator"},"Separator")," - GtkSeparator is a horizontal or vertical separator widget, depending on the value of the orientation property, used to group the widgets within a window."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SeparatorMenuItem"},"SeparatorMenuItem")," - The SeparatorMenuItem is a separator used to group items within a menu."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SeparatorToolItem"},"SeparatorToolItem")," - A SeparatorToolItem is a ToolItem that separates groups of other ToolItems."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Settings"},"Settings")," - GtkSettings provide a mechanism to share global settings between applications."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ShortcutLabel"},"ShortcutLabel")," - ShortcutLabel is a widget that represents a single keyboard shortcut or gesture in the user interface."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ShortcutsGroup"},"ShortcutsGroup")," - A GtkShortcutsGroup represents a group of related keyboard shortcuts or gestures."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ShortcutsSection"},"ShortcutsSection")," - A GtkShortcutsSection collects all the keyboard shortcuts and gestures for a major application mode."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ShortcutsShortcut"},"ShortcutsShortcut")," - A GtkShortcutsShortcut represents a single keyboard shortcut or gesture with a short text."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ShortcutsWindow"},"ShortcutsWindow")," - A GtkShortcutsWindow shows brief information about the keyboard shortcuts and gestures of an application."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SizeGroup"},"SizeGroup")," - SizeGroup provides a mechanism for grouping a number of widgets together so they all request the same amount of space."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Socket"},"Socket")," - Together with Plug, Socket provides the ability to embed widgets from one process into another process in a fashion that is transparent to the user."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SocketAccessible"},"SocketAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SpinButton"},"SpinButton")," - A SpinButton is an ideal way to allow the user to set the value of some attribute."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SpinButtonAccessible"},"SpinButtonAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Spinner"},"Spinner")," - A GtkSpinner widget displays an icon-size spinning animation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SpinnerAccessible"},"SpinnerAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Stack"},"Stack")," - The GtkStack widget is a container which only shows one of its children at a time."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"StackAccessible"},"StackAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"StackSidebar"},"StackSidebar"),' - A GtkStackSidebar enables you to quickly and easily provide a consistent "sidebar" object for your user interface.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"StackSwitcher"},"StackSwitcher")," - The GtkStackSwitcher widget acts as a controller for a Stack; it shows a row of buttons to switch between the various pages of the associated stack widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"StatusIcon"},"StatusIcon")," - The \u201csystem tray\u201d or notification area is normally used for transient icons that indicate some special state."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Statusbar"},"Statusbar")," - A Statusbar is usually placed along the bottom of an application's main Window."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"StatusbarAccessible"},"StatusbarAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Style"},"Style")," - A Style object encapsulates the information that provides the look and feel for a widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"StyleContext"},"StyleContext")," - StyleContext is an object that stores styling information affecting a widget defined by WidgetPath."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"StyleProperties"},"StyleProperties")," - GtkStyleProperties provides the storage for style information that is used by StyleContext and other StyleProvider implementations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Switch"},"Switch")," - Switch is a widget that has two states: on or off."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SwitchAccessible"},"SwitchAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"SymbolicColor"},"SymbolicColor")," - GtkSymbolicColor is a boxed type that represents a symbolic color."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Table"},"Table")," - The Table functions allow the programmer to arrange widgets in rows and columns, making it easy to align many widgets next to each other, horizontally and vertically."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TargetList"},"TargetList")," - A TargetList -struct is a reference counted list of GtkTargetPair and should be treated as opaque."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TearoffMenuItem"},"TearoffMenuItem")," - A TearoffMenuItem is a special MenuItem which is used to tear off and reattach its menu."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextAttributes"},"TextAttributes")," - Using TextAttributes directly should rarely be necessary."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextBTree"},"TextBTree")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextBuffer"},"TextBuffer")," - You may wish to begin by reading the text widget conceptual overview which gives an overview of all the objects and data types related to the text widget and how they work together."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextCellAccessible"},"TextCellAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextChildAnchor"},"TextChildAnchor")," - A TextChildAnchor is a spot in the buffer where child widgets can be \u201canchored\u201d (inserted inline, as if they were characters)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextMark"},"TextMark")," - You may wish to begin by reading the text widget conceptual overview which gives an overview of all the objects and data types related to the text widget and how they work together."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextTag"},"TextTag")," - You may wish to begin by reading the text widget conceptual overview which gives an overview of all the objects and data types related to the text widget and how they work together."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextTagTable"},"TextTagTable")," - You may wish to begin by reading the text widget conceptual overview which gives an overview of all the objects and data types related to the text widget and how they work together."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextView"},"TextView")," - You may wish to begin by reading the text widget conceptual overview which gives an overview of all the objects and data types related to the text widget and how they work together."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TextViewAccessible"},"TextViewAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ThemeEngine"},"ThemeEngine")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ThemingEngine"},"ThemingEngine")," - ThemingEngine was the object used for rendering themed content in GTK+ widgets."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToggleAction"},"ToggleAction")," - A ToggleAction corresponds roughly to a CheckMenuItem."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToggleButton"},"ToggleButton")," - A ToggleButton is a Button which will remain \u201cpressed-in\u201d when clicked."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToggleButtonAccessible"},"ToggleButtonAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToggleToolButton"},"ToggleToolButton")," - A ToggleToolButton is a ToolItem that contains a toggle button."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToolButton"},"ToolButton")," - ToolButtons are ToolItems containing buttons."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToolItem"},"ToolItem")," - ToolItems are widgets that can appear on a toolbar."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToolItemGroup"},"ToolItemGroup")," - A ToolItemGroup is used together with ToolPalette to add ToolItems to a palette like container with different categories and drag and drop support."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToolPalette"},"ToolPalette")," - A ToolPalette allows you to add ToolItems to a palette-like container with different categories and drag and drop support."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Toolbar"},"Toolbar")," - A toolbar is created with a call to Toolbar."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Tooltip"},"Tooltip")," - Basic tooltips can be realized simply by using set_tooltip_text or set_tooltip_markup without any explicit tooltip object."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"ToplevelAccessible"},"ToplevelAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreeModelFilter"},"TreeModelFilter")," - A TreeModelFilter is a tree model which wraps another tree model, and can do the following things:"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreeModelSort"},"TreeModelSort")," - The TreeModelSort is a model which implements the TreeSortable interface."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreePath"},"TreePath")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreeRowReference"},"TreeRowReference")," - A GtkTreeRowReference tracks model changes so that it always refers to the same row (a TreePath refers to a position, not a fixed row)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreeSelection"},"TreeSelection")," - The TreeSelection object is a helper object to manage the selection for a TreeView widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreeStore"},"TreeStore")," - The TreeStore object is a list model for use with a TreeView widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreeView"},"TreeView")," - Widget that displays any object that implements the TreeModel interface."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreeViewAccessible"},"TreeViewAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"TreeViewColumn"},"TreeViewColumn")," - The GtkTreeViewColumn object represents a visible column in a TreeView widget."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"UIManager"},"UIManager")," - A UIManager constructs a user interface (menus and toolbars) from one or more UI definitions, which reference actions from one or more action groups."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"VBox"},"VBox")," - A VBox is a container that organizes child widgets into a single column."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"VButtonBox"},"VButtonBox")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"VPaned"},"VPaned")," - The VPaned widget is a container widget with two children arranged vertically."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"VScale"},"VScale")," - The VScale widget is used to allow the user to select a value using a vertical slider."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"VScrollbar"},"VScrollbar")," - The VScrollbar widget is a widget arranged vertically creating a scrollbar."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"VSeparator"},"VSeparator")," - The VSeparator widget is a vertical separator, used to group the widgets within a window."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Viewport"},"Viewport")," - The Viewport widget acts as an adaptor class, implementing scrollability for child widgets that lack their own scrolling capabilities."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"VolumeButton"},"VolumeButton")," - VolumeButton is a subclass of ScaleButton that has been tailored for use as a volume control widget with suitable icons, tooltips and accessible labels."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Widget"},"Widget")," - GtkWidget is the base class all widgets in GTK+ derive from."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"WidgetAccessible"},"WidgetAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"WidgetPath"},"WidgetPath")," - GtkWidgetPath is a boxed type that represents a widget hierarchy from the topmost widget, typically a toplevel, to any child."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"Window"},"Window")," - A GtkWindow is a toplevel window which can contain other widgets."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"WindowAccessible"},"WindowAccessible")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"WindowGeometryInfo"},"WindowGeometryInfo")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"WindowGroup"},"WindowGroup")," - A WindowGroup restricts the effect of grabs to windows in the same group, thereby making window groups almost behave like separate applications.")))}m.isMDXComponent=!0}}]);